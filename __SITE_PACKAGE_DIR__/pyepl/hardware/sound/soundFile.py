# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_soundFile', [dirname(__file__)])
        except ImportError:
            import _soundFile
            return _soundFile
        if fp is not None:
            try:
                _mod = imp.load_module('_soundFile', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _soundFile = swig_import_helper()
    del swig_import_helper
else:
    import _soundFile
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


SEEK_SET = _soundFile.SEEK_SET
SEEK_CUR = _soundFile.SEEK_CUR
SEEK_END = _soundFile.SEEK_END
SHORT_RANGE = _soundFile.SHORT_RANGE
class soundFile(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, soundFile, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, soundFile, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soundFile.new_soundFile(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soundFile.delete_soundFile
    __del__ = lambda self : None;
    def getTotalSamples(self): return _soundFile.soundFile_getTotalSamples(self)
    def getChannels(self): return _soundFile.soundFile_getChannels(self)
    def getSamplerate(self): return _soundFile.soundFile_getSamplerate(self)
    def getFormat(self): return _soundFile.soundFile_getFormat(self)
    def getFrames(self): return _soundFile.soundFile_getFrames(self)
    def readfile_float(self, resampledrate = 0): return _soundFile.soundFile_readfile_float(self, resampledrate)
    def readfile_short(self, resampledrate = 0): return _soundFile.soundFile_readfile_short(self, resampledrate)
    def append_float(self, *args): return _soundFile.soundFile_append_float(self, *args)
    def append_short(self, *args): return _soundFile.soundFile_append_short(self, *args)
soundFile_swigregister = _soundFile.soundFile_swigregister
soundFile_swigregister(soundFile)

SF_FORMAT_WAV = _soundFile.SF_FORMAT_WAV
SF_FORMAT_AIFF = _soundFile.SF_FORMAT_AIFF
SF_FORMAT_AU = _soundFile.SF_FORMAT_AU
SF_FORMAT_RAW = _soundFile.SF_FORMAT_RAW
SF_FORMAT_PAF = _soundFile.SF_FORMAT_PAF
SF_FORMAT_SVX = _soundFile.SF_FORMAT_SVX
SF_FORMAT_NIST = _soundFile.SF_FORMAT_NIST
SF_FORMAT_VOC = _soundFile.SF_FORMAT_VOC
SF_FORMAT_IRCAM = _soundFile.SF_FORMAT_IRCAM
SF_FORMAT_W64 = _soundFile.SF_FORMAT_W64
SF_FORMAT_MAT4 = _soundFile.SF_FORMAT_MAT4
SF_FORMAT_MAT5 = _soundFile.SF_FORMAT_MAT5
SF_FORMAT_PVF = _soundFile.SF_FORMAT_PVF
SF_FORMAT_XI = _soundFile.SF_FORMAT_XI
SF_FORMAT_HTK = _soundFile.SF_FORMAT_HTK
SF_FORMAT_SDS = _soundFile.SF_FORMAT_SDS
SF_FORMAT_AVR = _soundFile.SF_FORMAT_AVR
SF_FORMAT_WAVEX = _soundFile.SF_FORMAT_WAVEX
SF_FORMAT_PCM_S8 = _soundFile.SF_FORMAT_PCM_S8
SF_FORMAT_PCM_16 = _soundFile.SF_FORMAT_PCM_16
SF_FORMAT_PCM_24 = _soundFile.SF_FORMAT_PCM_24
SF_FORMAT_PCM_32 = _soundFile.SF_FORMAT_PCM_32
SF_FORMAT_PCM_U8 = _soundFile.SF_FORMAT_PCM_U8
SF_FORMAT_FLOAT = _soundFile.SF_FORMAT_FLOAT
SF_FORMAT_DOUBLE = _soundFile.SF_FORMAT_DOUBLE
SF_FORMAT_ULAW = _soundFile.SF_FORMAT_ULAW
SF_FORMAT_ALAW = _soundFile.SF_FORMAT_ALAW
SF_FORMAT_IMA_ADPCM = _soundFile.SF_FORMAT_IMA_ADPCM
SF_FORMAT_MS_ADPCM = _soundFile.SF_FORMAT_MS_ADPCM
SF_FORMAT_GSM610 = _soundFile.SF_FORMAT_GSM610
SF_FORMAT_VOX_ADPCM = _soundFile.SF_FORMAT_VOX_ADPCM
SF_FORMAT_G721_32 = _soundFile.SF_FORMAT_G721_32
SF_FORMAT_G723_24 = _soundFile.SF_FORMAT_G723_24
SF_FORMAT_G723_40 = _soundFile.SF_FORMAT_G723_40
SF_FORMAT_DWVW_12 = _soundFile.SF_FORMAT_DWVW_12
SF_FORMAT_DWVW_16 = _soundFile.SF_FORMAT_DWVW_16
SF_FORMAT_DWVW_24 = _soundFile.SF_FORMAT_DWVW_24
SF_FORMAT_DWVW_N = _soundFile.SF_FORMAT_DWVW_N
SF_FORMAT_DPCM_8 = _soundFile.SF_FORMAT_DPCM_8
SF_FORMAT_DPCM_16 = _soundFile.SF_FORMAT_DPCM_16
SF_ENDIAN_FILE = _soundFile.SF_ENDIAN_FILE
SF_ENDIAN_LITTLE = _soundFile.SF_ENDIAN_LITTLE
SF_ENDIAN_BIG = _soundFile.SF_ENDIAN_BIG
SF_ENDIAN_CPU = _soundFile.SF_ENDIAN_CPU
SF_FORMAT_SUBMASK = _soundFile.SF_FORMAT_SUBMASK
SF_FORMAT_TYPEMASK = _soundFile.SF_FORMAT_TYPEMASK
SF_FORMAT_ENDMASK = _soundFile.SF_FORMAT_ENDMASK
SF_FALSE = _soundFile.SF_FALSE
SF_TRUE = _soundFile.SF_TRUE
SFM_READ = _soundFile.SFM_READ
SFM_WRITE = _soundFile.SFM_WRITE
SFM_RDWR = _soundFile.SFM_RDWR


